⋊> ~/K/i/ch03 on main ◦ flex scanner.flex; gcc lex.yy.c main.c -o scanner -ll -O2                                         06:24:21
⋊> ~/K/i/ch03 on main ◦ ./scanner main.c                                                                                  06:24:54
token: 5 text: #
token: 3 text: include
token: 5 text: "
token: 3 text: token
token: 5 text: .
token: 3 text: h
token: 5 text: "
token: 5 text: #
token: 3 text: include
token: 5 text: <
token: 3 text: stdio
token: 5 text: .
token: 3 text: h
token: 5 text: >
token: 3 text: extern
token: 3 text: FILE
token: 5 text: *
token: 3 text: yyin
token: 5 text: ;
token: 3 text: extern
token: 3 text: int
token: 3 text: yylex
token: 5 text: (
token: 5 text: )
token: 5 text: ;
token: 3 text: extern
token: 3 text: char
token: 5 text: *
token: 3 text: yytext
token: 5 text: ;
token: 3 text: int
token: 3 text: main
token: 5 text: (
token: 3 text: int
token: 3 text: argc
token: 5 text: ,
token: 3 text: char
token: 5 text: *
token: 5 text: *
token: 3 text: argv
token: 5 text: )
token: 5 text: {
token: 3 text: yyin
token: 5 text: =
token: 3 text: fopen
token: 5 text: (
token: 3 text: argv
token: 5 text: [
token: 4 text: 1
token: 5 text: ]
token: 5 text: ,
token: 5 text: "
token: 3 text: r
token: 5 text: "
token: 5 text: )
token: 5 text: ;
token: 3 text: if
token: 5 text: (
token: 5 text: !
token: 3 text: yyin
token: 5 text: )
token: 5 text: {
token: 3 text: printf
token: 5 text: (
token: 5 text: "
token: 3 text: could
token: 3 text: not
token: 3 text: open
token: 5 text: %
token: 3 text: s
token: 5 text: \
token: 3 text: n
token: 5 text: "
token: 5 text: ,
token: 3 text: argv
token: 5 text: [
token: 4 text: 1
token: 5 text: ]
token: 5 text: )
token: 5 text: ;
token: 3 text: return
token: 4 text: 1
token: 5 text: ;
token: 5 text: }
token: 1 text: while
token: 5 text: (
token: 4 text: 1
token: 5 text: )
token: 5 text: {
token: 3 text: token
token: 5 text: _
token: 3 text: t
token: 3 text: t
token: 5 text: =
token: 3 text: yylex
token: 5 text: (
token: 5 text: )
token: 5 text: ;
token: 3 text: if
token: 5 text: (
token: 3 text: t
token: 5 text: =
token: 5 text: =
token: 3 text: TOKEN
token: 5 text: _
token: 3 text: EOF
token: 5 text: )
token: 3 text: break
token: 5 text: ;
token: 3 text: printf
token: 5 text: (
token: 5 text: "
token: 3 text: token
token: 5 text: :
token: 5 text: %
token: 3 text: d
token: 3 text: text
token: 5 text: :
token: 5 text: %
token: 3 text: s
token: 5 text: \
token: 3 text: n
token: 5 text: "
token: 5 text: ,
token: 3 text: t
token: 5 text: ,
token: 3 text: yytext
token: 5 text: )
token: 5 text: ;
token: 5 text: }
token: 3 text: return
token: 4 text: 0
token: 5 text: ;
token: 5 text: }