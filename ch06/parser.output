Terminals which are not used

   TOKEN_FOR
   TOKEN_PRINT
   TOKEN_IF
   TOKEN_ELSE
   TOKEN_RBRACE


Grammar

    0 $accept: program $end

    1 program: name TOKEN_COLON TOKEN_FUNCTION type TOKEN_LPAREN TOKEN_RPAREN TOKEN_ASSIGN TOKEN_LBRACE stmt_list TOKEN_RPAREN

    2 stmt_list: stmt stmt_list
    3          | stmt

    4 stmt: TOKEN_RETURN TOKEN_INT TOKEN_SEMI

    5 name: TOKEN_ID

    6 type: TOKEN_ID


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN_FOR (258)
TOKEN_PRINT (259)
TOKEN_IF (260)
TOKEN_ELSE (261)
TOKEN_FUNCTION (262) 1
TOKEN_RETURN (263) 4
TOKEN_INT (264) 4
TOKEN_ID (265) 5 6
TOKEN_ASSIGN (266) 1
TOKEN_COLON (267) 1
TOKEN_LBRACE (268) 1
TOKEN_RBRACE (269)
TOKEN_LPAREN (270) 1
TOKEN_RPAREN (271) 1
TOKEN_SEMI (272) 4


Nonterminals, with rules where they appear

$accept (18)
    on left: 0
program (19)
    on left: 1, on right: 0
stmt_list (20)
    on left: 2 3, on right: 1 2
stmt (21)
    on left: 4, on right: 2 3
name (22)
    on left: 5, on right: 1
type (23)
    on left: 6, on right: 1


state 0

    0 $accept: . program $end

    TOKEN_ID  shift, and go to state 1

    program  go to state 2
    name     go to state 3


state 1

    5 name: TOKEN_ID .

    $default  reduce using rule 5 (name)


state 2

    0 $accept: program . $end

    $end  shift, and go to state 4


state 3

    1 program: name . TOKEN_COLON TOKEN_FUNCTION type TOKEN_LPAREN TOKEN_RPAREN TOKEN_ASSIGN TOKEN_LBRACE stmt_list TOKEN_RPAREN

    TOKEN_COLON  shift, and go to state 5


state 4

    0 $accept: program $end .

    $default  accept


state 5

    1 program: name TOKEN_COLON . TOKEN_FUNCTION type TOKEN_LPAREN TOKEN_RPAREN TOKEN_ASSIGN TOKEN_LBRACE stmt_list TOKEN_RPAREN

    TOKEN_FUNCTION  shift, and go to state 6


state 6

    1 program: name TOKEN_COLON TOKEN_FUNCTION . type TOKEN_LPAREN TOKEN_RPAREN TOKEN_ASSIGN TOKEN_LBRACE stmt_list TOKEN_RPAREN

    TOKEN_ID  shift, and go to state 7

    type  go to state 8


state 7

    6 type: TOKEN_ID .

    $default  reduce using rule 6 (type)


state 8

    1 program: name TOKEN_COLON TOKEN_FUNCTION type . TOKEN_LPAREN TOKEN_RPAREN TOKEN_ASSIGN TOKEN_LBRACE stmt_list TOKEN_RPAREN

    TOKEN_LPAREN  shift, and go to state 9


state 9

    1 program: name TOKEN_COLON TOKEN_FUNCTION type TOKEN_LPAREN . TOKEN_RPAREN TOKEN_ASSIGN TOKEN_LBRACE stmt_list TOKEN_RPAREN

    TOKEN_RPAREN  shift, and go to state 10


state 10

    1 program: name TOKEN_COLON TOKEN_FUNCTION type TOKEN_LPAREN TOKEN_RPAREN . TOKEN_ASSIGN TOKEN_LBRACE stmt_list TOKEN_RPAREN

    TOKEN_ASSIGN  shift, and go to state 11


state 11

    1 program: name TOKEN_COLON TOKEN_FUNCTION type TOKEN_LPAREN TOKEN_RPAREN TOKEN_ASSIGN . TOKEN_LBRACE stmt_list TOKEN_RPAREN

    TOKEN_LBRACE  shift, and go to state 12


state 12

    1 program: name TOKEN_COLON TOKEN_FUNCTION type TOKEN_LPAREN TOKEN_RPAREN TOKEN_ASSIGN TOKEN_LBRACE . stmt_list TOKEN_RPAREN

    TOKEN_RETURN  shift, and go to state 13

    stmt_list  go to state 14
    stmt       go to state 15


state 13

    4 stmt: TOKEN_RETURN . TOKEN_INT TOKEN_SEMI

    TOKEN_INT  shift, and go to state 16


state 14

    1 program: name TOKEN_COLON TOKEN_FUNCTION type TOKEN_LPAREN TOKEN_RPAREN TOKEN_ASSIGN TOKEN_LBRACE stmt_list . TOKEN_RPAREN

    TOKEN_RPAREN  shift, and go to state 17


state 15

    2 stmt_list: stmt . stmt_list
    3          | stmt .

    TOKEN_RETURN  shift, and go to state 13

    $default  reduce using rule 3 (stmt_list)

    stmt_list  go to state 18
    stmt       go to state 15


state 16

    4 stmt: TOKEN_RETURN TOKEN_INT . TOKEN_SEMI

    TOKEN_SEMI  shift, and go to state 19


state 17

    1 program: name TOKEN_COLON TOKEN_FUNCTION type TOKEN_LPAREN TOKEN_RPAREN TOKEN_ASSIGN TOKEN_LBRACE stmt_list TOKEN_RPAREN .

    $default  reduce using rule 1 (program)


state 18

    2 stmt_list: stmt stmt_list .

    $default  reduce using rule 2 (stmt_list)


state 19

    4 stmt: TOKEN_RETURN TOKEN_INT TOKEN_SEMI .

    $default  reduce using rule 4 (stmt)
